<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pingpong.server.mapper.FriendMapper">

    <!-- 친구 요청 보내기 -->
    <insert id="sendRequest">
        INSERT INTO FRIEND (user_id, friend_id, status, create_at)
        VALUES (#{userId}, #{friendId}, 'REQUESTED', SYSDATE)
    </insert>

    <!-- 친구 요청 수락 -->
    <update id="acceptRequest">
        UPDATE FRIEND
        SET status = 'ACCEPTED', update_at = SYSDATE
        WHERE user_id = #{friendId} AND friend_id = #{userId} AND status = 'REQUESTED'
    </update>

    <!-- 친구 요청 거절 -->
    <update id="rejectRequest">
        UPDATE FRIEND
        SET status = 'REJECTED', update_at = SYSDATE
        WHERE user_id = #{friendId} AND friend_id = #{userId} AND status = 'REQUESTED'
    </update>

    <!-- 친구 삭제 (양방향 삭제) -->
    <delete id="deleteFriend">
        DELETE FROM FRIEND
        WHERE (user_id = #{userId} AND friend_id = #{friendId})
           OR (user_id = #{friendId} AND friend_id = #{userId})
    </delete>

    <!-- 친구 목록 조회 (수락된 것만) -->
    <select id="getFriendList" resultType="pingpong.server.domain.Friend">
        SELECT * FROM FRIEND
        WHERE user_id = #{userId} AND status = 'ACCEPTED'
    </select>

    <!-- 받은 요청 목록 -->
    <select id="getIncomingRequests" resultType="pingpong.server.domain.Friend">
        SELECT * FROM FRIEND
        WHERE friend_id = #{userId} AND status = 'REQUESTED'
    </select>

    <!-- 보낸 요청 목록 -->
    <select id="getOutgoingRequests" resultType="pingpong.server.domain.Friend">
        SELECT * FROM FRIEND
        WHERE user_id = #{userId} AND status = 'REQUESTED'
    </select>

</mapper>
